zabbix_export:
  version: '7.4'
  template_groups:
    - uuid: a571c0d144b14fd4a87a9d9b2aa9fcd6
      name: Templates/Applications
  templates:
    - uuid: 8e155e663e5c4a3f93a765d6c30b70cd
      template: 'Proxmox Backup Server by HTTP'
      name: 'Proxmox Backup Server by HTTP'
      vendor:
        name: VoltKraft
        version: 1.4.4
      groups:
        - name: Templates/Applications
      items:
        - uuid: 0449b6e2a6ae4e40860479b234035718
          name: 'PBS: API service status'
          type: SCRIPT
          key: pbs.api.available
          delay: 5m
          history: 7d
          params: |
            try {
              var params = JSON.parse(value);
              var req = new HttpRequest();
              req.addHeader('Authorization: PBSAPIToken=' + params.token + ':' + params.secret);
              req.get(encodeURI('https://' + params.host + ':' + params.port + '/api2/json/version'));  
            } catch (error) {
                Zabbix.log(3, "Proxmox Backup Server API failed: " + params.host + " Error: " + error);
                if (!Number.isInteger(error))
                    return 520;
            }
            return req.getStatus();
          description: 'Get API service status.'
          valuemap:
            name: 'HTTP response status code'
          preprocessing:
            - type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 12h
          timeout: 10s
          parameters:
            - name: host
              value: '{$PBS.HOST}'
            - name: port
              value: '{$PBS.PORT}'
            - name: secret
              value: '{$PBS.TOKEN.SECRET}'
            - name: token
              value: '{$PBS.TOKEN.ID}'
          tags:
            - tag: component
              value: backup
            - tag: component
              value: system
          triggers:
            - uuid: c824c9e2069b4566b4c0d41d5ae7266e
              expression: 'last(/Proxmox Backup Server by HTTP/pbs.api.available)<>200'
              name: 'PBS: API service not available'
              priority: HIGH
        - uuid: 83c76592aedf4833a63393b5e7b54fb9
          name: 'PBS: Get disks'
          type: HTTP_AGENT
          key: pbs.disks
          delay: 5m
          history: 90d
          value_type: TEXT
          description: 'Get disks.'
          preprocessing:
            - type: CHECK_NOT_SUPPORTED
              parameters:
                - '-1'
              error_handler: CUSTOM_VALUE
              error_handler_params: 'Error getting data'
            - type: JSONPATH
              parameters:
                - $.body.data
          timeout: 10s
          url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/nodes/localhost/disks/list'
          headers:
            - name: Authorization
              value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
          output_format: JSON
          tags:
            - tag: component
              value: backup
            - tag: component
              value: raw
        - uuid: 77c1e03018814c3886f1d1614e944c4d
          name: 'PBS: Get verification jobs'
          type: HTTP_AGENT
          key: pbs.verify
          delay: 5m
          history: 90d
          value_type: TEXT
          preprocessing:
            - type: JSONPATH
              parameters:
                - $.data
          timeout: 10s
          url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/admin/verify'
          headers:
            - name: Authorization
              value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
          tags:
            - tag: component
              value: backup
            - tag: component
              value: raw
      discovery_rules:
        - uuid: 62f413093d19400c863fcdc787c5c1f1
          name: 'PBS: Datastore discovery'
          type: HTTP_AGENT
          key: pbs.datastore.discovery
          delay: 1h
          lifetime: 30d
          enabled_lifetime_type: DISABLE_AFTER
          enabled_lifetime: 24h
          item_prototypes:
            - uuid: 325c97e5c8a3412cb84615ec25b33a75
              name: '{#DATASTORE.NAME} avail'
              type: DEPENDENT
              key: 'pbs.datastore.avail.[{#DATASTORE.NAME}]'
              units: Byte
              description: 'The available bytes of the underlying storage. (-1 on error)'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[0]["avail"]'
                  error_handler: CUSTOM_ERROR
                  error_handler_params: 'No avail value'
              master_item:
                key: 'pbs.datastore.status.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
            - uuid: 018b33932bd24eb29155e99a7a7b43cc
              name: '{#DATASTORE.NAME} estimated-full-date'
              type: DEPENDENT
              key: 'pbs.datastore.estimated-full-date.[{#DATASTORE.NAME}]'
              description: |
                Estimation of the UNIX epoch when the storage will be full.
                It's calculated via a simple Linear Regression (Least Squares) over the RRD data of the
                last Month. Missing if not enough data points are available yet. An estimate in the past
                means that usage is declining or not changing.
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[0]["estimated-full-date"]'
                  error_handler: CUSTOM_ERROR
                  error_handler_params: 'No estimated-full-date value'
              master_item:
                key: 'pbs.datastore.status.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
            - uuid: a0e121ec801547e5ad5327b7c6fe0ffe
              name: 'PBS: Estimated Full {#DATASTORE.NAME}'
              type: CALCULATED
              key: 'pbs.datastore.estimated_full.[{#DATASTORE.NAME}]'
              delay: 15m
              units: s
              params: 'last(//pbs.datastore.estimated-full-date.[{#DATASTORE.NAME}]) - now()'
              description: 'Time in seconds until datastore is full.'
              tags:
                - tag: component
                  value: datastore
              trigger_prototypes:
                - uuid: 3c14ee4dd7434f53a93ada658f804402
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.estimated_full.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.FULL.DAYS.AVERAGE}'
                  name: 'PBS: {#DATASTORE.NAME} Estimated Full < {$PBS.DATASTORE.FULL.DAYS.AVERAGE}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: datastore
                - uuid: da8de52029f54f699eb76366c9c3926d
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.estimated_full.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.FULL.DAYS.DISASTER}'
                  name: 'PBS: {#DATASTORE.NAME} Estimated Full < {$PBS.DATASTORE.FULL.DAYS.DISASTER}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: DISASTER
                  tags:
                    - tag: component
                      value: datastore
                - uuid: b377162ede4a47449694b44e9c116f8a
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.estimated_full.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.FULL.DAYS.HIGH}'
                  name: 'PBS: {#DATASTORE.NAME} Estimated Full < {$PBS.DATASTORE.FULL.DAYS.HIGH}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: HIGH
                  tags:
                    - tag: component
                      value: datastore
                - uuid: 26588412f6754c82b604a3b4b5386ef7
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.estimated_full.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.FULL.DAYS.WARNING}'
                  name: 'PBS: {#DATASTORE.NAME} Estimated Full < {$PBS.DATASTORE.FULL.DAYS.WARNING}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: datastore
            - uuid: 7000aa603f4445c6a22ef9dc66694ed0
              name: '% Free {#DATASTORE.NAME}'
              type: CALCULATED
              key: 'pbs.datastore.free.[{#DATASTORE.NAME}]'
              delay: 15m
              units: '%'
              params: |
                (last(//pbs.datastore.avail.[{#DATASTORE.NAME}]) /
                last(//pbs.datastore.total.[{#DATASTORE.NAME}])) * 100
              trigger_prototypes:
                - uuid: 38794745c3b64e138f14b0208b26eed8
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.free.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.AVAILABLE.AVERAGE}'
                  name: 'PBS: less than {$PBS.DATASTORE.AVAILABLE.AVERAGE}% space on {#DATASTORE.NAME}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: datastore
                - uuid: 822ff288c2ff4df4993dd9c233c8ed0f
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.free.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.AVAILABLE.DISASTER}'
                  name: 'PBS: less than {$PBS.DATASTORE.AVAILABLE.DISASTER}% space on {#DATASTORE.NAME}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: DISASTER
                  tags:
                    - tag: component
                      value: datastore
                - uuid: ae59f54eb7e44ceaad08f6cf60aadc5c
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.free.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.AVAILABLE.HIGH}'
                  name: 'PBS: less than {$PBS.DATASTORE.AVAILABLE.HIGH}% space on {#DATASTORE.NAME}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: HIGH
                  tags:
                    - tag: component
                      value: datastore
                - uuid: 2f3d018dda7f4bc0bd4b7367b1afb1f6
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.free.[{#DATASTORE.NAME}])<{$PBS.DATASTORE.AVAILABLE.WARNING}'
                  name: 'PBS: less than {$PBS.DATASTORE.AVAILABLE.WARNING}% space on {#DATASTORE.NAME}'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: datastore
            - uuid: d2b3ed5853b649cd9fe610c96f904278
              name: 'PBS: Task {#DATASTORE.NAME} Prune'
              type: HTTP_AGENT
              key: 'pbs.datastore.prune.[{#DATASTORE.NAME}]'
              delay: 15m
              value_type: TEXT
              preprocessing:
                - type: CHECK_NOT_SUPPORTED
                  parameters:
                    - '-1'
                - type: JSONPATH
                  parameters:
                    - '$.data[0].status'
                  error_handler: DISCARD_VALUE
              timeout: 10s
              url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/nodes/0/tasks'
              query_fields:
                - name: running
                  value: 'false'
                - name: limit
                  value: '1'
                - name: typefilter
                  value: prune
                - name: store
                  value: '{#DATASTORE.NAME}'
              headers:
                - name: Authorization
                  value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
              tags:
                - tag: component
                  value: datastore
              trigger_prototypes:
                - uuid: cd4d705fae6842b6a5a762ac5d708702
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.datastore.prune.[{#DATASTORE.NAME}],1,"iregexp","error")=1'
                  name: 'PBS: Last prune on "{#DATASTORE.NAME}" finished with Error'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: datastore
                - uuid: 38a26228ca12427990af55c308cc6a6b
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.datastore.prune.[{#DATASTORE.NAME}],1,"iregexp","warning")=1'
                  name: 'PBS: Last prune on "{#DATASTORE.NAME}" finished with Warning'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: datastore
                - uuid: 18f2c6781ad44518ba9246d55f449362
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.prune.[{#DATASTORE.NAME}])<>"OK" and find(/Proxmox Backup Server by HTTP/pbs.datastore.prune.[{#DATASTORE.NAME}],1,"iregexp","error")=0 and find(/Proxmox Backup Server by HTTP/pbs.datastore.prune.[{#DATASTORE.NAME}],1,"iregexp","warning")=0'
                  name: 'PBS: Last prune on "{#DATASTORE.NAME}" is not OK'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: datastore
            - uuid: bf0b8c0bd74840c09bb019133264db62
              name: 'PBS: Status {#DATASTORE.NAME}'
              type: HTTP_AGENT
              key: 'pbs.datastore.status.[{#DATASTORE.NAME}]'
              delay: 5m
              value_type: TEXT
              preprocessing:
                - type: CHECK_NOT_SUPPORTED
                  parameters:
                    - '-1'
                - type: JSONPATH
                  parameters:
                    - '$.data[?(@.store=="{#DATASTORE.NAME}")]'
              timeout: 10s
              url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/status/datastore-usage'
              headers:
                - name: Authorization
                  value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
              tags:
                - tag: component
                  value: raw
            - uuid: 98d3c9ec4e2a41e6bc8aaab366aa909e
              name: 'PBS: Task {#DATASTORE.NAME} Sync'
              type: HTTP_AGENT
              key: 'pbs.datastore.sync.[{#DATASTORE.NAME}]'
              delay: 15m
              value_type: TEXT
              preprocessing:
                - type: CHECK_NOT_SUPPORTED
                  parameters:
                    - '-1'
                - type: JSONPATH
                  parameters:
                    - '$.data[0].status'
                  error_handler: DISCARD_VALUE
              timeout: 10s
              url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/nodes/0/tasks'
              query_fields:
                - name: running
                  value: 'false'
                - name: limit
                  value: '1'
                - name: typefilter
                  value: sync
                - name: store
                  value: '{#DATASTORE.NAME}'
              headers:
                - name: Authorization
                  value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
              tags:
                - tag: component
                  value: datastore
              trigger_prototypes:
                - uuid: 3d455497ac034bab8633dc88f6f727c9
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.datastore.sync.[{#DATASTORE.NAME}],1,"iregexp","error")=1'
                  name: 'PBS: Last Sync on "{#DATASTORE.NAME}" finished with Error'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: datastore
                - uuid: 2c8f45f1b559408bb0eb69252ea70581
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.datastore.sync.[{#DATASTORE.NAME}],1,"iregexp","warning")=1'
                  name: 'PBS: Last Sync on "{#DATASTORE.NAME}" finished with Warning'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: datastore
                - uuid: f05aca17c055475cbbec5b5d53056272
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.datastore.sync.[{#DATASTORE.NAME}])<>"OK" and find(/Proxmox Backup Server by HTTP/pbs.datastore.sync.[{#DATASTORE.NAME}],1,"iregexp","error")=0 and find(/Proxmox Backup Server by HTTP/pbs.datastore.sync.[{#DATASTORE.NAME}],1,"iregexp","warning")=0'
                  name: 'PBS: Last sync on "{#DATASTORE.NAME}" is not OK'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: datastore
            - uuid: d7bc18c1079743b593343a67f2e12b38
              name: '{#DATASTORE.NAME} total'
              type: DEPENDENT
              key: 'pbs.datastore.total.[{#DATASTORE.NAME}]'
              units: Byte
              description: 'The Size of the underlying storage in bytes.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[0]["total"]'
                  error_handler: CUSTOM_ERROR
                  error_handler_params: 'No total value'
              master_item:
                key: 'pbs.datastore.status.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
            - uuid: 9bf44da792fd49a48726bf50c38d4e02
              name: '{#DATASTORE.NAME} used'
              type: DEPENDENT
              key: 'pbs.datastore.used.[{#DATASTORE.NAME}]'
              units: Byte
              description: 'The used bytes of the underlying storage.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[0]["used"]'
                  error_handler: CUSTOM_ERROR
                  error_handler_params: 'No used value'
              master_item:
                key: 'pbs.datastore.status.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
            - uuid: 79dcce28c38f45418e674a29ad376316
              name: '{#DATASTORE.NAME} GC disk-chunks'
              type: DEPENDENT
              key: 'pbs.gc.disk-chunks.[{#DATASTORE.NAME}]'
              description: 'Chunks used on disk.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["disk-chunks"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 2b43d778736d4362af2e464b7d58f3bb
              name: '{#DATASTORE.NAME} GC duration'
              type: DEPENDENT
              key: 'pbs.gc.duration.[{#DATASTORE.NAME}]'
              units: s
              description: 'Duration of last gc run'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["duration"]'
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 19aca90024944e46a7b0d0fc0c1d808d
              name: '{#DATASTORE.NAME} GC index-data-bytes'
              type: DEPENDENT
              key: 'pbs.gc.index-data-bytes.[{#DATASTORE.NAME}]'
              units: Byte
              description: 'Sum of bytes referred by index files.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["index-data-bytes"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 9fd075ae7a8542b6a214ac636e02881b
              name: '{#DATASTORE.NAME} GC index-file-count'
              type: DEPENDENT
              key: 'pbs.gc.index-file-count.[{#DATASTORE.NAME}]'
              description: 'Number of processed index files.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["index-file-count"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 7a62587f577b43638bc8640fcaf64f5c
              name: '{#DATASTORE.NAME} GC last-run-endtime'
              type: DEPENDENT
              key: 'pbs.gc.last-run-endtime.[{#DATASTORE.NAME}]'
              description: 'Endtime of the last gc run'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["last-run-endtime"]'
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 0579b26b88274bfca0beee61ea4bc9e9
              name: '{#DATASTORE.NAME} GC last-run-state'
              type: DEPENDENT
              key: 'pbs.gc.last-run-state.[{#DATASTORE.NAME}]'
              value_type: TEXT
              description: 'State of the last gc run'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["last-run-state"]'
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
              trigger_prototypes:
                - uuid: bc642eef0a6e475a8ccfbbce7b50e9e0
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.gc.last-run-state.[{#DATASTORE.NAME}],1,"iregexp","error")=1'
                  name: 'PBS: Last Garbage Collect on {#DATASTORE.NAME} finished with Error'
                  opdata: 'Last state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: gc
                - uuid: 08d8195c4da04924b0eb4d3e696ba7e1
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.gc.last-run-state.[{#DATASTORE.NAME}],1,"iregexp","warning")=1'
                  name: 'PBS: Last Garbage Collect on {#DATASTORE.NAME} finished with Warning'
                  opdata: 'Last state: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: gc
                - uuid: 6999b38f06dc43a7b1bb1b7d9671419b
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.gc.last-run-state.[{#DATASTORE.NAME}])<>"OK" and find(/Proxmox Backup Server by HTTP/pbs.gc.last-run-state.[{#DATASTORE.NAME}],1,"iregexp","warning")=0 and find(/Proxmox Backup Server by HTTP/pbs.gc.last-run-state.[{#DATASTORE.NAME}],1,"iregexp","error")=0'
                  name: 'PBS: Last Garbage Collect on {#DATASTORE.NAME} is not OK'
                  opdata: 'Last state: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: gc
            - uuid: 80502c30b1bc43b085cc5d9ff163db34
              name: '{#DATASTORE.NAME} GC next-run'
              type: DEPENDENT
              key: 'pbs.gc.next-run.[{#DATASTORE.NAME}]'
              description: 'Time of the next gc run'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["next-run"]'
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: c086d19ec05949868c6b85c85bd36f14
              name: '{#DATASTORE.NAME} GC pending-bytes'
              type: DEPENDENT
              key: 'pbs.gc.pending-bytes.[{#DATASTORE.NAME}]'
              description: 'Sum of pending bytes (pending removal - kept for safety).'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["pending-bytes"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 68c3fe16b92e4ddcbd6c8d2049325b18
              name: '{#DATASTORE.NAME} GC pending-chunks'
              type: DEPENDENT
              key: 'pbs.gc.pending-chunks.[{#DATASTORE.NAME}]'
              description: 'Number of pending chunks (pending removal - kept for safety).'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["pending-chunks"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 05ceb6875142477a8a2b227d2644b4ee
              name: '{#DATASTORE.NAME} GC removed-bad'
              type: DEPENDENT
              key: 'pbs.gc.removed-bad.[{#DATASTORE.NAME}]'
              description: 'Number of chunks marked as .bad by verify that have been removed by GC.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["removed-bad"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: df5ddef3e80f445dbd7194ed4471fb18
              name: '{#DATASTORE.NAME} GC removed-bytes'
              type: DEPENDENT
              key: 'pbs.gc.removed-bytes.[{#DATASTORE.NAME}]'
              units: Byte
              description: 'Sum of removed bytes.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["removed-bytes"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 1a30a708fe4f4de39d684f2ce5827278
              name: '{#DATASTORE.NAME} GC removed-chunks'
              type: DEPENDENT
              key: 'pbs.gc.removed-chunks.[{#DATASTORE.NAME}]'
              description: 'Number of removed chunks.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["removed-chunks"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: 77ea235511cb4239b66fe999798c070b
              name: '{#DATASTORE.NAME} GC schedule'
              type: DEPENDENT
              key: 'pbs.gc.schedule.[{#DATASTORE.NAME}]'
              value_type: TEXT
              description: 'Schedule of the gc job'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["schedule"]'
                  error_handler: DISCARD_VALUE
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
            - uuid: f31fdf895fa94658a2f2c448f23e7679
              name: '{#DATASTORE.NAME} GC still-bad'
              type: DEPENDENT
              key: 'pbs.gc.still-bad.[{#DATASTORE.NAME}]'
              description: 'Number of chunks still marked as .bad after garbage collection.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.data["still-bad"]'
              master_item:
                key: 'pbs.gc.[{#DATASTORE.NAME}]'
              tags:
                - tag: component
                  value: datastore
                - tag: component
                  value: gc
              trigger_prototypes:
                - uuid: c5214d3c895b44068102b373940ca57a
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.gc.still-bad.[{#DATASTORE.NAME}])>0'
                  name: 'PBS: Bad chunks on {#DATASTORE.NAME}'
                  opdata: 'Bad chunks: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: gc
            - uuid: ee12029759f343f9a2d88417f2434185
              name: 'PBS: GC {#DATASTORE.NAME}'
              type: HTTP_AGENT
              key: 'pbs.gc.[{#DATASTORE.NAME}]'
              delay: 1h
              value_type: TEXT
              description: 'Garbage collection status.'
              timeout: 10s
              url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/admin/datastore/{#DATASTORE.NAME}/gc'
              headers:
                - name: Authorization
                  value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
              tags:
                - tag: component
                  value: raw
          trigger_prototypes:
            - uuid: 01c82d1089ed447f95d723e704207064
              expression: 'last(/Proxmox Backup Server by HTTP/pbs.gc.schedule.[{#DATASTORE.NAME}])=0 and last(/Proxmox Backup Server by HTTP/pbs.gc.next-run.[{#DATASTORE.NAME}])=0'
              name: 'PBS: No Garbage Collect schedule configured on {#DATASTORE.NAME}'
              opdata: 'Schedule: {ITEM.LASTVALUE1}'
              priority: WARNING
              tags:
                - tag: component
                  value: gc
          graph_prototypes:
            - uuid: ef326e872e1345559dc81f8739dbbdf1
              name: '{#DATASTORE.NAME} avail'
              yaxismax: '0'
              graph_items:
                - color: 199C0D
                  calc_fnc: ALL
                  item:
                    host: 'Proxmox Backup Server by HTTP'
                    key: 'pbs.datastore.avail.[{#DATASTORE.NAME}]'
            - uuid: 0516ca954b424e3483af96e54a9cef77
              name: '{#DATASTORE.NAME} GC duration'
              yaxismax: '0'
              graph_items:
                - color: 199C0D
                  calc_fnc: ALL
                  item:
                    host: 'Proxmox Backup Server by HTTP'
                    key: 'pbs.gc.duration.[{#DATASTORE.NAME}]'
            - uuid: ed8c71edc374484ebc04dcc83c153cf9
              name: '{#DATASTORE.NAME} GC still-bad'
              graph_items:
                - color: FF0000
                  calc_fnc: MIN
                  item:
                    host: 'Proxmox Backup Server by HTTP'
                    key: 'pbs.gc.removed-bad.[{#DATASTORE.NAME}]'
            - uuid: bf3dbf678f164378b9b7665502bd9485
              name: '{#DATASTORE.NAME} used'
              graph_items:
                - drawtype: FILLED_REGION
                  color: FF0000
                  calc_fnc: ALL
                  item:
                    host: 'Proxmox Backup Server by HTTP'
                    key: 'pbs.datastore.used.[{#DATASTORE.NAME}]'
                - sortorder: '1'
                  drawtype: FILLED_REGION
                  color: 00FF00
                  calc_fnc: ALL
                  item:
                    host: 'Proxmox Backup Server by HTTP'
                    key: 'pbs.datastore.total.[{#DATASTORE.NAME}]'
          timeout: 10s
          url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/admin/datastore'
          headers:
            - name: Authorization
              value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
          lld_macro_paths:
            - lld_macro: '{#DATASTORE.NAME}'
              path: $.store
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data[*]'
        - uuid: 4333aa3a0ee64fe8aede5e835d63923d
          name: 'PBS: Disk discovery'
          type: DEPENDENT
          key: pbs.disk.discovery
          lifetime: 30d
          enabled_lifetime_type: DISABLE_NEVER
          item_prototypes:
            - uuid: 85501120e36d48589a52d56d0dec55d7
              name: 'PBS: Disk [{#DISK.PATH}] Model'
              type: DEPENDENT
              key: 'pbs.disk.model[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Model of the disk.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].model.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
              trigger_prototypes:
                - uuid: bcd531f0197143c38860a24e1ef2ee5b
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.disk.model[{#DISK.PATH}],#1)<>last(/Proxmox Backup Server by HTTP/pbs.disk.model[{#DISK.PATH}],#2)'
                  name: 'PBS: Disk [{#DISK.PATH}] Model has changed'
                  priority: WARNING
                  manual_close: 'YES'
            - uuid: ff389bb665884d11b41b77c5b932bbd0
              name: 'PBS: Disk [{#DISK.PATH}] Name'
              type: DEPENDENT
              key: 'pbs.disk.name[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Name of the disk.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].name.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
            - uuid: 485d2a3a98e944008618a91cd43c30f3
              name: 'PBS: Disk [{#DISK.PATH}] Serial'
              type: DEPENDENT
              key: 'pbs.disk.serial[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Serial of the disk.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].serial.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
              trigger_prototypes:
                - uuid: f07a872469d94d0dae3b955656593f66
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.disk.serial[{#DISK.PATH}],#1)<>last(/Proxmox Backup Server by HTTP/pbs.disk.serial[{#DISK.PATH}],#2)'
                  name: 'PBS: Disk [{#DISK.PATH}] Serial has changed'
                  priority: WARNING
                  manual_close: 'YES'
            - uuid: 7c31eaeb57f14ab9b457fa6e968b9ca4
              name: 'PBS: Disk [{#DISK.PATH}] Size'
              type: DEPENDENT
              key: 'pbs.disk.size[{#DISK.PATH}]'
              history: 90d
              units: bytes
              description: 'Total Size of disk in bytes.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].size.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
            - uuid: 3d5ddd6ae9c84ded8f82da383a986d25
              name: 'PBS: Disk [{#DISK.PATH}] Status'
              type: DEPENDENT
              key: 'pbs.disk.status[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Disk status.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].status.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
              tags:
                - tag: component
                  value: pbs_disk
              trigger_prototypes:
                - uuid: 0ebb109edcbc40d095945ca9a530dc5f
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.disk.status[{#DISK.PATH}],,"like","failed")=1'
                  name: 'PBS: Disk [{#DISK.PATH}] Status indicates a problem'
                  priority: WARNING
                  manual_close: 'YES'
            - uuid: 4e4148965fd9483bbc1ba7c145368bba
              name: 'PBS: Disk [{#DISK.PATH}] Used'
              type: DEPENDENT
              key: 'pbs.disk.used[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Indicates where (and if) that disk is used by PBS.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].used.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
              trigger_prototypes:
                - uuid: 64b7d1789dd44d9eabaf3b072548a4db
                  expression: 'last(/Proxmox Backup Server by HTTP/pbs.disk.used[{#DISK.PATH}],#1)<>last(/Proxmox Backup Server by HTTP/pbs.disk.used[{#DISK.PATH}],#2)'
                  name: 'PBS: Disk [{#DISK.PATH}] Used has changed'
                  priority: WARNING
                  manual_close: 'YES'
            - uuid: 3a781863820548b78994156dff6b5175
              name: 'PBS: Disk [{#DISK.PATH}] Vendor'
              type: DEPENDENT
              key: 'pbs.disk.vendor[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Vendor of the disk.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].vendor.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
            - uuid: 791a4b27bf53470cad24018548b2439d
              name: 'PBS: Disk [{#DISK.PATH}] Wearout'
              type: DEPENDENT
              key: 'pbs.disk.wearout[{#DISK.PATH}]'
              history: 90d
              value_type: TEXT
              description: 'Wearout indicator.'
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$.[?(@.devpath == ''{#DISK.PATH}'')].wearout.first()'
                - type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: pbs.disks
          master_item:
            key: pbs.disks
          lld_macro_paths:
            - lld_macro: '{#DISK.NAME}'
              path: $.name
            - lld_macro: '{#DISK.PATH}'
              path: $.devpath
            - lld_macro: '{#DISK.SERIAL}'
              path: $.serial
            - lld_macro: '{#DISK.SIZE}'
              path: $.size
            - lld_macro: '{#DISK.STATUS}'
              path: $.status
            - lld_macro: '{#DISK.TYPE}'
              path: '$.[''disk-type'']'
            - lld_macro: '{#DISK.USED}'
              path: $.used
            - lld_macro: '{#DISK.VENDOR}'
              path: $.vendor
            - lld_macro: '{#DISK.WEAROUT}'
              path: $.wearout
        - uuid: c5ec778e5d5345a0ae8eb52547d7d8df
          name: 'PBS: Namespece discovery'
          type: HTTP_AGENT
          key: 'pbs.namespace.discovery.[{#DATASTORE.NAME}]'
          delay: 1h
          enabled_lifetime_type: DISABLE_AFTER
          enabled_lifetime: 1h
          parent_discovery_rule:
            key: pbs.datastore.discovery
          timeout: 10s
          url: 'https://{$PBS.HOST}:{$PBS.PORT}/api2/json/admin/datastore'
          headers:
            - name: Authorization
              value: 'PBSAPIToken={$PBS.TOKEN.ID}:{$PBS.TOKEN.SECRET}'
          lld_macro_paths:
            - lld_macro: '{#NAMESPACE.NAME}'
              path: $.ns
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$.data[*]'
        - uuid: a1d58b9ae2ed4271a840a94e86eb54a5
          name: 'PBS: verification job discovery'
          type: DEPENDENT
          key: pbs.verify.discovery
          lifetime: 30d
          item_prototypes:
            - uuid: 7131f15e717c4034a369f0b1b74a3f08
              name: 'PBS: Verify Job last-run-state'
              type: DEPENDENT
              key: 'pbs.verify.last-run-state.[{#VERIFY.ID}]'
              history: 90d
              value_type: TEXT
              preprocessing:
                - type: JSONPATH
                  parameters:
                    - '$[?(@.id=="{#VERIFY.ID}")].[''last-run-state'']'
                  error_handler: DISCARD_VALUE
                - type: JSONPATH
                  parameters:
                    - '$[0]'
              master_item:
                key: pbs.verify
              tags:
                - tag: component
                  value: backup
              trigger_prototypes:
                - uuid: 1c013ea66b1147e483907a855bb09a3b
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.verify.last-run-state.[{#VERIFY.ID}],1,"iregexp","error|failed")=1'
                  name: 'PBS: Last verify Job finished with Error'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: backup
                - uuid: 9e5d723d9eec4cdbac00e2a9778522f5
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.verify.last-run-state.[{#VERIFY.ID}],1,"iregexp","warning")=1'
                  name: 'PBS: Last verify Job finished with Warning'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: WARNING
                  tags:
                    - tag: component
                      value: backup
                - uuid: 30cba463b177466796f1df24cb1ff677
                  expression: 'find(/Proxmox Backup Server by HTTP/pbs.verify.last-run-state.[{#VERIFY.ID}],1,"iregexp","OK")=0 and find(/Proxmox Backup Server by HTTP/pbs.verify.last-run-state.[{#VERIFY.ID}],1,"iregexp","error")=0 and find(/Proxmox Backup Server by HTTP/pbs.verify.last-run-state.[{#VERIFY.ID}],1,"iregexp","warning")=0 and find(/Proxmox Backup Server by HTTP/pbs.verify.last-run-state.[{#VERIFY.ID}],1,"iregexp","failed")=0'
                  name: 'PBS: Last verify Job is not OK'
                  opdata: '{ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  tags:
                    - tag: component
                      value: backup
          master_item:
            key: pbs.verify
          lld_macro_paths:
            - lld_macro: '{#VERIFY.ID}'
              path: $.id
          preprocessing:
            - type: JSONPATH
              parameters:
                - '$[*]'
      tags:
        - tag: component
          value: backup
      macros:
        - macro: '{$PBS.DATASTORE.AVAILABLE.AVERAGE}'
          value: '10'
          description: 'Datastore free % average'
        - macro: '{$PBS.DATASTORE.AVAILABLE.DISASTER}'
          value: '1'
          description: 'Datastore free % disaster'
        - macro: '{$PBS.DATASTORE.AVAILABLE.HIGH}'
          value: '5'
          description: 'Datastore free % high'
        - macro: '{$PBS.DATASTORE.AVAILABLE.MIN}'
          value: '10737418240'
        - macro: '{$PBS.DATASTORE.AVAILABLE.WARNING}'
          value: '20'
          description: 'Datastore free % warning'
        - macro: '{$PBS.DATASTORE.FULL.DAYS.AVERAGE}'
          value: 30d
          description: 'Datastore Estimated Full average'
        - macro: '{$PBS.DATASTORE.FULL.DAYS.DISASTER}'
          value: 7d
          description: 'Datastore Estimated Full disaster'
        - macro: '{$PBS.DATASTORE.FULL.DAYS.HIGH}'
          value: 14d
          description: 'Datastore Estimated Full high'
        - macro: '{$PBS.DATASTORE.FULL.DAYS.WARNING}'
          value: 60d
          description: 'Datastore Estimated Full warning'
        - macro: '{$PBS.HOST}'
          value: '<HOSTNAME>'
          description: 'PBS IP/FQDN'
        - macro: '{$PBS.PORT}'
          value: '8007'
          description: 'PBS Port'
        - macro: '{$PBS.TASKS.DAYS}'
          value: '1'
          description: 'Age of tasks to consider when looking for failed tasks (days)'
        - macro: '{$PBS.TOKEN.ID}'
          value: USER@REALM!TOKENID
          description: 'API tokens allow stateless access to most parts of the REST API by another system, software or API client.'
        - macro: '{$PBS.TOKEN.SECRET}'
          value: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
          description: 'PBS Token Secret'
      valuemaps:
        - uuid: b4e066bfeb334388a8fb9f30ad844459
          name: 'HTTP response status code'
          mappings:
            - value: '200'
              newvalue: OK
            - value: '301'
              newvalue: 'Moved Permanently'
            - value: '400'
              newvalue: 'Bad Request'
            - value: '401'
              newvalue: Unauthorized
            - value: '403'
              newvalue: Forbidden
            - value: '404'
              newvalue: 'Not Found'
            - value: '405'
              newvalue: 'Method Not Allowed'
            - value: '500'
              newvalue: 'Internal Server Error'
            - value: '502'
              newvalue: 'Bad Gateway'
            - value: '503'
              newvalue: 'Service Unavailable'
            - value: '504'
              newvalue: 'Gateway Timeout'
            - value: '520'
              newvalue: 'Unknown Error'
