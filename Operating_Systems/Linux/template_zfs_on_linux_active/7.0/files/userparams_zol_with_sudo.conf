# ZFS discovery and configuration
# original template from pbergbolt (source = https://www.zabbix.com/forum/showthread.php?t=43347), modified by Slash <slash@aceslash.net>


# pool discovery
UserParameter=zfs.pool.discovery,/usr/bin/sudo /sbin/zpool list -H -o name | sed -e '$ ! s/\(.*\)/{"{#POOLNAME}":"\1"},/' | sed -e '$  s/\(.*\)/{"{#POOLNAME}":"\1"}]}/' | sed -e '1  s/\(.*\)/{ \"data\":[\1/'
# dataset discovery, called "fileset" in the zabbix template for legacy reasons
UserParameter=zfs.fileset.discovery,/usr/bin/sudo /sbin/zfs list -H -o name | sed -e '$ ! s/\(.*\)/{"{#FILESETNAME}":"\1"},/' | sed -e '$  s/\(.*\)/{"{#FILESETNAME}":"\1"}]}/' | sed -e '1  s/\(.*\)/{ \"data\":[\1/'
# vdev discovery
UserParameter=zfs.vdev.discovery,/usr/bin/sudo /sbin/zpool list -Hv | grep '^[[:blank:]]' | egrep -v 'mirror|raidz' | awk '{print $1}' | sed -e '$ ! s/\(.*\)/{"{#VDEV}":"\1"},/' | sed -e '$  s/\(.*\)/{"{#VDEV}":"\1"}]}/' | sed -e '1  s/\(.*\)/{ \"data\":[\1/'

# pool health
UserParameter=zfs.zpool.health[*],/usr/bin/sudo /sbin/zpool list -H -o health $1

# get any fs option
UserParameter=zfs.get.fsinfo[*],/usr/bin/sudo /sbin/zfs get -o value -Hp $2 $1

# compressratio need special treatment because of the "x" at the end of the number
UserParameter=zfs.get.compressratio[*],/usr/bin/sudo /sbin/zfs get -o value -Hp compressratio $1 | sed "s/x//"

# memory used by ZFS: sum of the SPL slab allocator's statistics
# "There are a few things not included in that, like the page cache used by mmap(). But you can expect it to be relatively accurate."
UserParameter=zfs.memory.used,echo $(( `cat /proc/spl/kmem/slab | tail -n +3 | awk '{ print $3 }' | tr "\n" "+" | sed "s/$/0/"` ))

# get any global zfs parameters
UserParameter=zfs.get.param[*],cat /sys/module/zfs/parameters/$1

# ARC stats from /proc/spl/kstat/zfs/arcstats
UserParameter=zfs.arcstats[*],awk '/^$1/ {printf $$3;}' /proc/spl/kstat/zfs/arcstats

# ZIL stats from /proc/spl/kstat/zfs/zil
UserParameter=zfs.zil[*],awk '/^$1/ {printf $$3;}' /proc/spl/kstat/zfs/zil

# detect if a scrub is in progress, 0 = in progress, 1 = not in progress
UserParameter=zfs.zpool.scrub.status[*],/usr/bin/sudo /sbin/zpool status $1 | grep "scrub in progress" > /dev/null ; echo $?
# Completion timestamp of last completed scrub
UserParameter=zfs.zpool.scrub.timestamp[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-scrub-timestamp $1
# Bytes repaired by last completed scrub
UserParameter=zfs.zpool.scrub.repaired[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-scrub-repaired $1
# Length of last completed scrub
UserParameter=zfs.zpool.scrub.length[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-scrub-length $1
# Errors detected by last completed scrub
UserParameter=zfs.zpool.scrub.errors[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-scrub-errors $1

# detect if a resilver is in progress, 0 = in progress, 1 = not in progress
UserParameter=zfs.zpool.resilver.status[*],/usr/bin/sudo /sbin/zpool status $1 | grep "resilver in progress" > /dev/null ; echo $?
# Completion timestamp of last completed resilver
UserParameter=zfs.zpool.resilver.timestamp[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-resilver-timestamp $1
# Bytes repaired by last completed resilver
UserParameter=zfs.zpool.resilver.repaired[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-resilver-repaired $1
# Length of last completed resilver
UserParameter=zfs.zpool.resilver.length[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-resilver-length $1
# Errors detected by last completed resilver
UserParameter=zfs.zpool.resilver.errors[*],/usr/bin/sudo /sbin/zfs get -Ho value zabbix:last-resilver-errors $1

# vdev state
UserParameter=zfs.vdev.state[*],/usr/bin/sudo /sbin/zpool status | grep 1 "$1" | awk '{ print $$2 }'
# vdev READ error counter
UserParameter=zfs.vdev.error_counter.read[*],/usr/bin/sudo /sbin/zpool status | grep "$1" | awk '{ print $$3 }' | numfmt --from=si
# vdev WRITE error counter
UserParameter=zfs.vdev.error_counter.write[*],/usr/bin/sudo /sbin/zpool status | grep "$1" | awk '{ print $$4 }' | numfmt --from=si
# vdev CHECKSUM error counter
UserParameter=zfs.vdev.error_counter.cksum[*],/usr/bin/sudo /sbin/zpool status | grep "$1" | awk '{ print $$5 }' | numfmt --from=si

# pool read
UserParameter=zfs.zpool.iostat.reads[*],/sbin/zpool iostat -Hp $1 | awk '{print $$4}'

# pool write
UserParameter=zfs.zpool.iostat.writes[*],/sbin/zpool iostat -Hp $1 | awk '{print $$5}'

# pool read throughput
UserParameter=zfs.zpool.iostat.nread[*],/sbin/zpool iostat -H $1 | awk '{print $$6}' | numfmt --from=si

# pool write throughput
UserParameter=zfs.zpool.iostat.nwritten[*],/sbin/zpool iostat -H $1 | awk '{print $$7}' | numfmt --from=si